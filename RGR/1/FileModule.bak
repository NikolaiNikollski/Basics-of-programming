UNIT FileModule;

INTERFACE
TYPE
  Tree = ^NodeType;
  NodeType = RECORD
               Key: CHAR;
               Counter: INTEGER;
               LLink, RLink: Tree;
             END;
PROCEDURE Insert(VAR Ptr: Tree; Data: CHAR);
PROCEDURE PrintStat(Ptr: Tree);

IMPLEMENTATION

PROCEDURE Insert(VAR Ptr: Tree; Data: CHAR);
BEGIN {Insert}
  IF Ptr = NIL
  THEN
    BEGIN {Создаем лист со значением Data}
      NEW(Ptr);
      Ptr^.Key := Data;
      Ptr^.Counter := 1;
      Ptr^.LLink := NIL;
      Ptr^.RLink := NIL;
    END
  ELSE
    IF Ptr^.Key > Data
    THEN
      Insert(Ptr^.LLink, Data)
    ELSE
      IF Ptr^.Key < Data
      THEN
        Insert(Ptr^.RLink, Data)
      ELSE
        Ptr^.Counter := Ptr^.Counter + 1
END;  {Insert}

PROCEDURE PrintStat(Ptr: Tree);
BEGIN {PrintTree}
  IF Ptr <> NIL
  THEN  {Печатает поддерево слева, вершину, поддерево справа}
    BEGIN
      PrintStat(Ptr^.LLink);
      WRITELN(CHR(39), Ptr^.Key, CHR(39), ' occurs ', NumberToString(Ptr^.Counter), ' times');
      PrintStat(Ptr^.RLink);
    END
END;  {PrintTree}

BEGIN {FileModule}
END. {FileModule}




